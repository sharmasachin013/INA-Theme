<?php

/**
 * @file
 * Primary module hooks for custom module.
 */

use Drupal\Core\Template\Attribute;
use Drupal\media\Entity\Media;
use Drupal\file\Entity\File;

/**
 * Prepares variables for views-style-custom-flexi-card.html.twig template.
 */
function template_preprocess_views_style_custom_flexi_card(array &$variables): void {
  $view = $variables['view'];
  $options = $view->style_plugin->options;


  // Fetch wrapper classes from handler options.
  if ($options['wrapper_class']) {
    $variables['attributes']['class'] = explode(' ', $options['wrapper_class']);
  }

  $variables['default_row_class'] = $options['default_row_class'];
  $i = 0;
  foreach ($variables['rows'] as $id => $row) {
    $i++;
    $field_items = $row['#row']->_entity->get('field_image_');
foreach ($field_items as $item) {
  $file_id = $item->target_id;

}
$file = File::load($file_id);

$uri = $file->getFileUri();
$realpath = \Drupal::service('file_system')->realpath($uri);
$path = str_replace($_SERVER['DOCUMENT_ROOT'] . '/', '', $realpath); 
    $variables['rows'][$id] = [
      'content' => $row,
      'attributes' => new Attribute(),
    ];
    $variables['rows'][$id]['title'] = $row['#row']->_entity->getTitle();
     $variables['rows'][$id]['url'] = $path;
    
    $variables['rows'][$id]['id'] = 'node-'.$i;
    if ($row_class = $view->style_plugin->getRowClass($id)) {
      $variables['rows'][$id]['attributes']->addClass($row_class);
    }
  }
}

